<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxEx1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RAAAAABJRU5ErkJggg==
</value>
  </data>
</root>